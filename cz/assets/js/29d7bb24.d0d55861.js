"use strict";(self.webpackChunkforge_samples_docs=self.webpackChunkforge_samples_docs||[]).push([[338],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return k}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),k=o,m=d["".concat(u,".").concat(k)]||d[k]||c[k]||a;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},260:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},u="Autentikace",p={unversionedId:"tutorials/simple-viewer/nodejs/auth",id:"tutorials/simple-viewer/nodejs/auth",isDocsHomePage:!1,title:"Autentikace",description:"V tomto kroku roz\u0161\xed\u0159\xedme n\xe1\u0161 server, abychom se s jeho pomoc\xed mohli autentikovat platform\u011b Forge",source:"@site/i18n/cz/docusaurus-plugin-content-docs/current/tutorials/simple-viewer/nodejs/auth.md",sourceDirName:"tutorials/simple-viewer/nodejs",slug:"/tutorials/simple-viewer/nodejs/auth",permalink:"/forge-samples-docs/cz/docs/tutorials/simple-viewer/nodejs/auth",editUrl:"https://github.com/petrbroz/forge-samples-docs/edit/master/docs/tutorials/simple-viewer/nodejs/auth.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Z\xe1kladn\xed server",permalink:"/forge-samples-docs/cz/docs/tutorials/simple-viewer/nodejs/server"},next:{title:"Spr\xe1va soubor\u016f",permalink:"/forge-samples-docs/cz/docs/tutorials/simple-viewer/nodejs/data"}},l=[{value:"Spr\xe1va token\u016f",id:"spr\xe1va-token\u016f",children:[]},{value:"Autentika\u010dn\xed serverov\xe9 adresy",id:"autentika\u010dn\xed-serverov\xe9-adresy",children:[]},{value:"Zkou\u0161ka",id:"zkou\u0161ka",children:[]}],c={toc:l};function d(e){var t=e.components,s=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"autentikace"},"Autentikace"),(0,a.kt)("p",null,"V tomto kroku roz\u0161\xed\u0159\xedme n\xe1\u0161 server, abychom se s jeho pomoc\xed mohli autentikovat platform\u011b Forge\na vytv\xe1\u0159et autentika\u010dn\xed tokeny pro r\u016fzn\xe9 \xfa\u010dely."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'Je dobr\xfdm zvykem generovat "intern\xed" token s v\xedce pr\xe1vy (nap\u0159\xedklad,\numo\u017e\u0148uj\xedc\xed majiteli vytv\xe1\u0159et nebo mazat soubory ve slu\u017eb\u011b Data Management), kter\xfd bude pou\u017e\xedv\xe1n\npouze serverem, a "ve\u0159ejn\xfd" token s m\xe9n\u011b pr\xe1vy, kter\xfd pak m\u016f\u017ee b\xfdt zasl\xe1n do prohl\xed\u017ee\u010de.')),(0,a.kt)("h2",{id:"spr\xe1va-token\u016f"},"Spr\xe1va token\u016f"),(0,a.kt)("p",null,"Vytvo\u0159te soubor ",(0,a.kt)("inlineCode",{parentName:"p"},"forge.js")," pod adres\xe1\u0159em ",(0,a.kt)("inlineCode",{parentName:"p"},"services"),". Zde budeme implementova ve\u0161kerou logiku\nt\xfdkaj\xedc\xed se slu\u017eby Forge, kterou pak budeme vyu\u017e\xedvat v dal\u0161\xedch oblastech na\u0161\xed serverov\xe9 aplikace.\nZa\u010dn\u011bme p\u0159id\xe1n\xedm n\xe1sleduj\xedc\xedho k\xf3du:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/forge.js"',title:'"services/forge.js"'},"const { AuthClientTwoLegged } = require('forge-apis');\n\nconst { FORGE_CLIENT_ID, FORGE_CLIENT_SECRET } = process.env;\nif (!FORGE_CLIENT_ID || !FORGE_CLIENT_SECRET) {\n    console.warn('Missing some of the environment variables.');\n    process.exit(1);\n}\nconst INTERNAL_TOKEN_SCOPES = ['bucket:read', 'bucket:create', 'data:read', 'data:write', 'data:create'];\nconst PUBLIC_TOKEN_SCOPES = ['viewables:read'];\n\nlet internalAuthClient = new AuthClientTwoLegged(FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, INTERNAL_TOKEN_SCOPES, true);\nlet publicAuthClient = new AuthClientTwoLegged(FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, PUBLIC_TOKEN_SCOPES, true);\n\nasync function getInternalToken() {\n    if (!internalAuthClient.isAuthorized()) {\n        await internalAuthClient.authenticate();\n    }\n    return internalAuthClient.getCredentials();\n}\n\nasync function getPublicToken() {\n    if (!publicAuthClient.isAuthorized()) {\n        await publicAuthClient.authenticate();\n    }\n    return publicAuthClient.getCredentials();\n}\n\nmodule.exports = {\n    getPublicToken\n};\n")),(0,a.kt)("p",null,"Tento k\xf3d o\u010dek\xe1v\xe1, \u017ee mu budou poskytnuty autentika\u010dn\xed \xfadaje Forge aplikace pomoc\xed prom\u011bnn\xfdch prost\u0159ed\xed\n",(0,a.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_ID")," a ",(0,a.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_SECRET"),". Jde o ",(0,a.kt)("em",{parentName:"p"},"Client ID")," a ",(0,a.kt)("em",{parentName:"p"},"Client Secret")," hodnoty, kter\xe9 z\xedsk\xe1te\np\u0159i ",(0,a.kt)("a",{parentName:"p",href:"../../../intro#create-an-app"},"vytv\xe1\u0159en\xed Forge aplikace"),". S t\u011bmito \xfadaji jsou pak vytvo\u0159eny dv\u011b\ninstance autentika\u010dn\xedch klient\u016f, jeden pro vnit\u0159n\xed pou\u017eit\xed (zaji\u0161\u0165uj\xedc\xed read/write p\u0159\xedstup k dat\u016fm\nve slu\u017eb\u011b Data Management), a jeden pro ve\u0159ejn\xe9 pou\u017eit\xed (umo\u017e\u0148uj\xedc\xed pouze prohl\xed\u017een\xed v\xfdsledk\u016f konverze\nna\u0161ich soubor\u016f ve slu\u017eb\u011b Model Derivative), a dv\u011b pomocn\xe9 funkce pro generov\xe1n\xed odpov\xeddaj\xedc\xedch token\u016f."),(0,a.kt)("h2",{id:"autentika\u010dn\xed-serverov\xe9-adresy"},"Autentika\u010dn\xed serverov\xe9 adresy"),(0,a.kt)("p",null,"Nyn\xed m\u016f\u017eeme vytvo\u0159it prvn\xed serverovou adresu. Vytvo\u0159te soubor ",(0,a.kt)("inlineCode",{parentName:"p"},"auth.js")," v adres\xe1\u0159i ",(0,a.kt)("inlineCode",{parentName:"p"},"routes")," a vlo\u017ete\ndo n\u011bj n\xe1sleduj\xedc\xed k\xf3d:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/auth.js"',title:'"routes/auth.js"'},"const express = require('express');\nconst { getPublicToken } = require('../services/forge.js');\n\nlet router = express.Router();\n\nrouter.get('/token', async function (req, res, next) {\n    try {\n        res.json(await getPublicToken());\n    } catch (err) {\n        next(err);\n    }\n});\n\nmodule.exports = router;\n")),(0,a.kt)("p",null,"Tento k\xf3d definuje nov\xfd ",(0,a.kt)("a",{parentName:"p",href:"http://expressjs.com/en/4x/api.html#router"},"Express Router"),", kter\xfd bude\nodpov\xeddat na dotazy p\u0159ich\xe1zej\xedc\xed na adresu kon\u010d\xedc\xed ",(0,a.kt)("inlineCode",{parentName:"p"},"/token"),", generovat ve\u0159ejn\xe9 autektika\u010dn\xed tokeny\na pos\xedlat je zp\u011bt prohl\xed\u017ee\u010di ve form\xe1tu JSON."),(0,a.kt)("p",null,'Nov\u011b definovan\xfd router je\u0161t\u011b mus\xedme "p\u0159ipojit" k na\u0161emu serveru pomoc\xed n\xe1sleduj\xedc\xed \xfapravy\nsouboru ',(0,a.kt)("inlineCode",{parentName:"p"},"server.js"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'{6} title="server.js"',"{6}":!0,title:'"server.js"'},"const express = require('express');\nconst PORT = process.env.PORT || 3000;\n\nlet app = express();\napp.use(express.static('public'));\napp.use('/api/auth', require('./routes/auth.js'));\napp.use(function (err, req, res, next) {\n    console.error(err);\n    res.status(500).send(err.message);\n});\napp.listen(PORT, function () { console.log(`Server listening on port ${PORT}...`); });\n")),(0,a.kt)("p",null,"Jeliko\u017e jsme router p\u0159ipojili k adresov\xe9 p\u0159edpon\u011b ",(0,a.kt)("inlineCode",{parentName:"p"},"/api/auth"),", bude jeho logika odpov\xeddat\nna ve\u0161ker\xe9 po\u017eadavky p\u0159ich\xe1zej\xedc\xed na serverovou adresu ",(0,a.kt)("inlineCode",{parentName:"p"},"/api/auth/token"),"."),(0,a.kt)("h2",{id:"zkou\u0161ka"},"Zkou\u0161ka"),(0,a.kt)("p",null,"Vyzkou\u0161ejme, zda na\u0161e nov\xe1 serverov\xe1 adresa funguje. Nastavte Va\u0161e Forge client ID a client secret\njako prom\u011bnn\xe9 prost\u0159ed\xed ",(0,a.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_ID")," a ",(0,a.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_SECRET"),", a spus\u0165te aplikaci z p\u0159\xedkazov\xe9\n\u0159\xe1dky:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export FORGE_CLIENT_ID=your-own-forge-client-id\nexport FORGE_CLIENT_SECRET=your-own-forge-client-secret\nnpm start\n")),(0,a.kt)("p",null,"Pokud otev\u0159ete str\xe1nku http://localhost:3000/api/auth/token v prohl\xed\u017ee\u010di,\nserver by m\u011bl v odpov\u011bdi zaslat autentika\u010dn\xed token ve form\xe1tu JSON."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Server Response",src:n(9119).Z})))}d.isMDXComponent=!0},9119:function(e,t,n){t.Z=n.p+"assets/images/auth-response-28494c38df07db6307fff8591a6dd37c.png"}}]);