"use strict";(self.webpackChunkforge_samples_docs=self.webpackChunkforge_samples_docs||[]).push([[484],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3779:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),i=["components"],o={sidebar_position:1},l="Basic Server",p={unversionedId:"tutorials/simple-viewer/nodejs/server",id:"tutorials/simple-viewer/nodejs/server",isDocsHomePage:!1,title:"Basic Server",description:"In this step we're going to create a new Node.js project, install all the required dependencies,",source:"@site/docs/tutorials/simple-viewer/nodejs/server.md",sourceDirName:"tutorials/simple-viewer/nodejs",slug:"/tutorials/simple-viewer/nodejs/server",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/nodejs/server",editUrl:"https://github.com/petrbroz/forge-samples-docs/edit/main/website/docs/tutorials/simple-viewer/nodejs/server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/index"},next:{title:"Authentication",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/nodejs/auth"}},c=[{value:"Project &amp; dependencies",id:"project--dependencies",children:[]},{value:"Create a basic server",id:"create-a-basic-server",children:[]},{value:"Try it out",id:"try-it-out",children:[]}],u={toc:c};function d(e){var t=e.components,o=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"basic-server"},"Basic Server"),(0,s.kt)("p",null,"In this step we're going to create a new Node.js project, install all the required dependencies,\nand setup a basic Node.js server."),(0,s.kt)("h2",{id:"project--dependencies"},"Project & dependencies"),(0,s.kt)("p",null,"Create a new folder for your project, navigate to it in the command line, and initialize a new\nNode.js project:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,s.kt)("p",null,"Next, install all the Node.js dependencies we're going to use. In this case it will be\nthe ",(0,s.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express.js")," framework, a middleware for handling ",(0,s.kt)("inlineCode",{parentName:"p"},"multipart/form-data"),"\nrequests, and finally the ",(0,s.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/forge-apis"},"Forge SDK"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save express express-formidable forge-apis\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},'"dependencies"')," in your ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")," file should now look something like this (potentially\nwith slightly different version numbers):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n"dependencies": {\n    "express": "^4.17.1",\n    "express-formidable": "^1.2.0",\n    "forge-apis": "^0.8.6"\n}\n// ...\n')),(0,s.kt)("p",null,"Finally, let's create a couple of subfolders in your project folder that we're going to need later:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"public")," - this is where we're going to put all the client side assets (HTML, CSS, JavaScript, images, etc.)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"routes")," - this is where we're going to implement all the server endpoints"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"services")," - here we're going to keep all the server-side logic that can be shared by different endpoints")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Folder Structure",src:r(3885).Z})),(0,s.kt)("h2",{id:"create-a-basic-server"},"Create a basic server"),(0,s.kt)("p",null,"Create a ",(0,s.kt)("inlineCode",{parentName:"p"},"server.js")," file in the root of your project folder with the following code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst PORT = process.env.PORT || 3000;\n\nlet app = express();\napp.use(express.static('public'));\napp.use(function (err, req, res, next) {\n    console.error(err);\n    res.status(500).send(err.message);\n});\napp.listen(PORT, function () { console.log(`Server listening on port ${PORT}...`); });\n")),(0,s.kt)("p",null,"For now the server isn't doing much, just serving client side assets from the ",(0,s.kt)("inlineCode",{parentName:"p"},"public")," subfolder,\nand reporting all errors to the console and back to the client."),(0,s.kt)("p",null,"Next, let's add a ",(0,s.kt)("inlineCode",{parentName:"p"},'"start": "node server.js"')," script to the ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json")," file so that we can\neasily run our application later:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n"scripts": {\n    "start": "node server.js"\n}\n// ...\n')),(0,s.kt)("h2",{id:"try-it-out"},"Try it out"),(0,s.kt)("p",null,"Try running the application from the command line:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,s.kt)("p",null,"Then open your browser and navigate to http://localhost:3000. The server should respond\nwith ",(0,s.kt)("inlineCode",{parentName:"p"},"Cannot GET /")," because we haven't added any logic to it just yet."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Empty Response",src:r(4664).Z})),(0,s.kt)("p",null,"That's going to be the topic of step 2 - ",(0,s.kt)("a",{parentName:"p",href:"./auth"},"Authentication"),"."))}d.isMDXComponent=!0},4664:function(e,t,r){t.Z=r.p+"assets/images/empty-response-9d502510b7021559ea2b486fb3310107.png"},3885:function(e,t,r){t.Z=r.p+"assets/images/folder-structure-04ed1883f9b17907e100c12db10fbf84.png"}}]);