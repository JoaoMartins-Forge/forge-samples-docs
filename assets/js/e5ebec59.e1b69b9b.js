"use strict";(self.webpackChunkforge_samples_docs=self.webpackChunkforge_samples_docs||[]).push([[374],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1335:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},l="Basic Server",p={unversionedId:"tutorials/simple-viewer/nodejs-vscode/server",id:"tutorials/simple-viewer/nodejs-vscode/server",title:"Basic Server",description:"In this step we're going to create a new Node.js project, install all the required dependencies,",source:"@site/docs/tutorials/simple-viewer/nodejs-vscode/01-server.md",sourceDirName:"tutorials/simple-viewer/nodejs-vscode",slug:"/tutorials/simple-viewer/nodejs-vscode/server",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/nodejs-vscode/server",editUrl:"https://github.com/petrbroz/forge-samples-docs/edit/master/docs/tutorials/simple-viewer/nodejs-vscode/01-server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/"},next:{title:"Authentication",permalink:"/forge-samples-docs/docs/tutorials/simple-viewer/nodejs-vscode/auth"}},c={},d=[{value:"Project &amp; dependencies",id:"project--dependencies",level:2},{value:"Application config",id:"application-config",level:2},{value:"Create a basic server",id:"create-a-basic-server",level:2},{value:"Try it out",id:"try-it-out",level:2}],u={toc:d};function m(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"basic-server"},"Basic Server"),(0,o.kt)("p",null,"In this step we're going to create a new Node.js project, install all the required dependencies,\nand setup a basic ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express.js")," server."),(0,o.kt)("h2",{id:"project--dependencies"},"Project & dependencies"),(0,o.kt)("p",null,"Create a new folder for your project, navigate to it in the command line, and initialize a new\nNode.js project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,o.kt)("p",null,"Next, install all the Node.js dependencies we're going to use. In this case it will be\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express.js")," framework, an Express.js ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com/en/guide/using-middleware.html"},"middleware"),"\nfor handling ",(0,o.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," requests, and finally the ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/forge-apis"},"Forge SDK"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save express express-formidable forge-apis\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},'"dependencies"')," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file should now look something like this (potentially\nwith slightly different version numbers):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n"dependencies": {\n    "express": "^4.17.1",\n    "express-formidable": "^1.2.0",\n    "forge-apis": "^0.8.6"\n}\n// ...\n')),(0,o.kt)("p",null,"Finally, let's create a couple more subfolders in the project folder that we're going to need later:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"wwwroot")," - this is where we're going to put all the client side assets (HTML, CSS, JavaScript, images, etc.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"routes")," - this is where we're going to implement all the server endpoints"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"services")," - here we're going to keep all the server-side logic that can be shared by different endpoints")),(0,o.kt)("h2",{id:"application-config"},"Application config"),(0,o.kt)("p",null,"Our Node.js application will need a couple of configuration parameters to run properly, for example,\nthe app credentials for communicating with Autodesk Forge services (Forge client ID and secret), and\nthe name of a bucket in the ",(0,o.kt)("a",{parentName:"p",href:"https://forge.autodesk.com/en/docs/data/v2/developers_guide/overview"},"Data Management"),"\nservice for storing uploaded designs. We will pass these parameters to the server app using environment variables."),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"config.js")," file in the root of your project folder, and add the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"let { FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, FORGE_BUCKET, PORT } = process.env;\nif (!FORGE_CLIENT_ID || !FORGE_CLIENT_SECRET) {\n    console.warn('Missing some of the environment variables.');\n    process.exit(1);\n}\nFORGE_BUCKET = FORGE_BUCKET || `${FORGE_CLIENT_ID.toLowerCase()}-basic-app`;\nPORT = PORT || 8080;\n\nmodule.exports = {\n    FORGE_CLIENT_ID,\n    FORGE_CLIENT_SECRET,\n    FORGE_BUCKET,\n    PORT\n};\n")),(0,o.kt)("p",null,"We simply read the environment variables from ",(0,o.kt)("inlineCode",{parentName:"p"},"process.env"),", and exit the application\nimmediately if any of the required properties are missing. And if no bucket name is provided,\nwe generate one by appending the ",(0,o.kt)("inlineCode",{parentName:"p"},"-basic-app")," suffix to the Forge Client ID."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Note that the Data Management service requires bucket names to be ",(0,o.kt)("strong",{parentName:"p"},"globally unique"),",\nand attempts to create a bucket with an already used name will fail with ",(0,o.kt)("inlineCode",{parentName:"p"},"409 Conflict"),".\nSee the ",(0,o.kt)("a",{parentName:"p",href:"https://forge.autodesk.com/en/docs/data/v2/reference/http/buckets-POST"},"documentation"),"\nfor more details."))),(0,o.kt)("h2",{id:"create-a-basic-server"},"Create a basic server"),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"server.js")," file in the root of your project folder with the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst { PORT } = require('./config.js');\n\nlet app = express();\napp.use(express.static('wwwroot'));\napp.listen(PORT, function () { console.log(`Server listening on port ${PORT}...`); });\n")),(0,o.kt)("p",null,"For now the server isn't doing much, just serving static assets from the ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," subfolder\n(which is currently empty), and reporting all errors to the console and back to the client."),(0,o.kt)("p",null,"Next, let's add a ",(0,o.kt)("inlineCode",{parentName:"p"},'"start": "node server.js"')," script to the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," file so that we can\neasily run our application later:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n"scripts": {\n    "start": "node server.js"\n}\n// ...\n')),(0,o.kt)("h2",{id:"try-it-out"},"Try it out"),(0,o.kt)("p",null,"Try setting your own Forge client ID and secret as the ",(0,o.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_ID")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"FORGE_CLIENT_SECRET"),"\nenvironment variables, and run the application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export FORGE_CLIENT_ID=your-own-forge-client-id\nexport FORGE_CLIENT_SECRET=your-own-forge-client-secret\nnpm start\n")),(0,o.kt)("p",null,"Then open your browser and navigate to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),".\nThe server should respond with ",(0,o.kt)("inlineCode",{parentName:"p"},"Cannot GET /")," because we haven't added any logic to it just yet."),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"lazy",alt:"Empty Response",src:n(1014).Z,width:"1500",height:"929"})),(0,o.kt)("p",null,"That's going to be the topic of the next step."))}m.isMDXComponent=!0},1014:function(e,t,n){t.Z=n.p+"assets/images/empty-response-04c22f341dd47ec7db7b86e0363bd339.png"}}]);